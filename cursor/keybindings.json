// Place your key bindings in this file to override the defaults
[
  // terminal movement
  {
    "key": "ctrl+n",
    "command": "workbench.action.terminal.sendSequence",
    "args": { "text": "\u001b[B" },
    "when": "terminalFocus"
  },
  {
    "key": "ctrl+p",
    "command": "workbench.action.terminal.sendSequence",
    "args": { "text": "\u001b[A" },
    "when": "terminalFocus"
  },

  // prevent toggling of panel
  {
    "key": "cmd+j",
    "command": "-workbench.action.togglePanel"
  },
  // // muscle memory, typically use <space>q to quickly toggle qflist
  // {
  //   "key": "q",
  //   "command": "workbench.action.togglePanel",
  //   "when": "panelFocus && !problemsFilterFocus"
  // },

  // completion
  {
    "key": "ctrl+k",
    "command": "-quickInput.previous"
  },
  {
    "key": "ctrl+j",
    "command": "-quickInput.next"
  },

  // cancel
  {
    "key": "ctrl+c",
    "command": "closeReferenceSearch",
    "when": "referenceSearchVisible"
  },
  {
    "key": "ctrl+c",
    "command": "closeParameterHints",
    "when": "parameterHintsVisible"
  },
  {
    "key": "ctrl+c",
    "command": "workbench.action.closeQuickOpen",
    "when": "inQuickInput"
  },
  {
    "key": "ctrl+c",
    "command": "workbench.action.closeQuickOpen",
    "when": "inQuickOpen"
  },
  {
    "key": "ctrl+c",
    "command": "hideCodeActionWidget",
    "when": "codeActionMenuVisible"
  },
  {
    "key": "ctrl+c",
    "command": "cancelRenameInput",
    "when": "renameInputVisible"
  },
  {
    "key": "ctrl+c",
    "command": "closeQuickDiff",
    "when": "dirtyDiffVisible"
  },

  // unbind default televison keybinds
  {
    "key": "ctrl+p",
    "command": "-television.ToggleFileFinder"
  },
  {
    "key": "cmd+shift+u",
    "command": "-television.ToggleTextFinder"
  },

  // file tree
  {
    "key": ", n n",
    "command": "workbench.action.focusFirstEditorGroup",
    "when": "filesExplorerFocus"
  },

  // chat
  {
    "key": "ctrl+c",
    "command": "composer.cancelChat",
    "when": "composerFocused"
  },
  {
    "key": "ctrl+[",
    "command": "workbench.action.focusFirstEditorGroup",
    "when": "composerFocused"
  },

  // harpoon
  {
    "key": "ctrl+s",
    "when": "editorTextFocus && vim.mode == 'Normal'",
    "command": "vscode-harpoon.addEditor"
  },
  {
    "key": "ctrl+t",
    "when": "editorTextFocus && vim.mode == 'Normal'",
    "command": "vscode-harpoon.editorQuickPick"
  },
  {
    "key": "ctrl+f",
    "when": "editorTextFocus && vim.mode == 'Normal'",
    "command": "vscode-harpoon.editEditors"
  },
  {
    "key": "cmd+[",
    "command": "-composer.previousChatTab",
    "when": "composerFocused"
  },
  {
    "key": "cmd+]",
    "command": "-composer.nextChatTab",
    "when": "composerFocused"
  },
  {
    "key": "cmd+shift+[",
    "command": "composer.previousChatTab",
    "when": "composerFocused"
  },
  {
    "key": "cmd+shift+]",
    "command": "composer.nextChatTab",
    "when": "composerFocused"
  },
  {
    "key": "ctrl+enter",
    "command": "aipopup.action.modal.generate",
    "when": "editorTextFocus"
  },
  {
    "key": "cmd+i",
    "command": "composerMode.agent"
  },
  {
    "key": "cmd+/",
    "command": "-composer.openModelToggle",
    "when": "composerFocused"
  },
  {
    "key": "cmd+l",
    "command": "composerMode.chat"
  }
]
